#!/bin/bash
#

FILE_PATTERN=".[ch] .[ch]pp .cc .hh .java"

CTAGS_PARAMS="--recurse=no --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q"

EXTRA_FILE="tags-extra"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

CTAGS=`which ctags`
CSCOPE=`which cscope`
TMPFILE="/tmp/find-cscope-$$-tmp"

INPUT_PATTERN="( "
OR_SEPARATOR=
for pattern in $FILE_PATTERN
do
    INPUT_PATTERN="$INPUT_PATTERN$OR_SEPARATOR -name *$pattern"
    OR_SEPARATOR=" -o"
done
INPUT_PATTERN="$INPUT_PATTERN )"

rm -f tags cscope.*

find -L -maxdepth 1 -mindepth 1 \( -type d -o -type l \) ! -name ".*" >cscope.dirs 2>/dev/null

if test -e "$EXTRA_FILE"
then
    grep -v -e "^#" -e "^$" "$EXTRA_FILE" | (
        while read name
        do
            case ${name:0:1} in
                +)
                    echo "${name:1}" >>cscope.dirs
                ;;
                -)
                    grep -v "^${name:1}" cscope.dirs >$TMPFILE
                    rm cscope.dirs
                    mv $TMPFILE cscope.dirs
                ;;
                \#)
                    # do nothing here
                ;;
                *)
                    echo "Warning: line ignored in $EXTRA_FILE: '$name'" >&2
                ;;
            esac
        done
    )
fi

function scan_source_dirs()
{
    while read line
    do
        local -a words=($line)
        local dir="${words[0]}"
        local -a find_params=
        if test ${#words[*]} = 1; then
            # find "$dir" -type f -a "${INPUT_PATTERN[@]}"
            set -f
            find_params=($INPUT_PATTERN)
            set +f
        else
            local i=1
            local j=0
            while test $i -lt ${#words[*]}; do
                if test $i != 1; then
                    find_params[$j]="("
                    j=$(($j+1))
                    find_params[$j]="-o"
                    j=$(($j+1))
                fi
                local name="${words[$i]}"
                find_params[$j]="-name"
                j=$(($j+1))
                find_params[$j]="${name//\"/}"
                j=$(($j+1))
                i=$(($i+1))
            done
            if test $j -gt 2; then
                find_params[$j]=")"
                j=$(($j+1))
            fi
        fi
        find "$dir/" -type f -a "${find_params[@]}"
    done
}

scan_source_dirs <cscope.dirs >cscope.files

for pattern in $FILE_PATTERN
do
    ls -1 *$pattern 2>/dev/null | {
        while read name
        do
            echo "./$name" >>cscope.files 2>/dev/null
        done
    }
done

if test -e "$EXTRA_FILE"
then
    grep -v -e "^#" -e "^$" "$EXTRA_FILE" | (
        while read name
        do
            case ${name:0:1} in
                -)
                    grep -v "^${name:1}" cscope.files >$TMPFILE
                    rm cscope.files
                    mv $TMPFILE cscope.files
                ;;
            esac
        done
    )
fi

# Do the job: ----------------------

sed -i -e "s/^\.\///" cscope.files

$CTAGS $CTAGS_PARAMS -L cscope.files

sed -i -e "s/ /\\\\ /g" cscope.files
$CSCOPE -b -q -i cscope.files

# Delete temporaries: --------------

# rm -f cscope.files cscope.dirs $TMPFILE

